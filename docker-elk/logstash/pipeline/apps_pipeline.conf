input {
  pipeline {
    address => "apps-pipeline"
  }
}

filter {
  if [container][name] == "frappe_docker-frontend-1" {

    # === MUTATE ===
    mutate {
      replace => { "[container][name]" => "frappe-frontend" }
    }
    
    # === GROK ===
    grok {
      match => { "message" => "%{IPORHOST:[client][address]} %{USER:[user][id]} %{USER:[user][name]} \[%{HTTPDATE:[@metadata][timestamp]}\] \"(?:%{WORD:[http][request][method]} %{NOTSPACE:[url][original]}(?: HTTP/%{NUMBER:[http][version]})?|%{DATA:rawrequest})\" %{NUMBER:[http][response][status_code]:int} (?:%{NUMBER:[http][response][body][bytes]:int}|-) %{QS:[http][request][referrer]} %{QS:[user_agent][original]}" }

      overwrite => [ "message" ]
    }
  }

  if [container][name] == "frappe_docker-backend-1" {
    # === MUTATE ===
    mutate {
      replace => { "[container][name]" => "frappe-backend" }
    }

  }

  if [container][name] == "frappe_docker-websocket-1" {
    # === MUTATE ===
    mutate {
      replace => { "[container][name]" => "frappe-websocket" }
    }
  }

    # === MUTATE ===
    mutate { add_tag => ["processed_by_app_pipeline"] }

}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
    index => "logs-app-%{+YYYY.MM.dd}"
  }
}