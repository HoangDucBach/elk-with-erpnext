input {
  beats {
    port => 5044
  }
}

filter {
  if [container][labels][service] == "frontend" {
    grok {
      match => { "message" => "%{IPORHOST:[client][address]} %{USER:[user][id]} %{USER:[user][name]} \[%{HTTPDATE:[@metadata][timestamp]}\] \"(?:%{WORD:[http][request][method]} %{NOTSPACE:[url][original]}(?: HTTP/%{NUMBER:[http][version]})?|%{DATA:rawrequest})\" %{NUMBER:[http][response][status_code]:int} (?:%{NUMBER:[http][response][body][bytes]:int}|-) %{QS:[http][request][referrer]} %{QS:[user_agent][original]}" }

      overwrite => [ "message" ]
	  add_tag => [ "nginx_parsed" ]
    }

    mutate {
      convert => {
        "[http][response][status_code]" => "integer"
        "[http][response][body][bytes]" => "integer"
      }
    }

    # Xử lý timestamp (thường @timestamp đã được Filebeat/Beats input xử lý,
    # nhưng nếu không đúng, bạn có thể parse từ trường timestamp đã trích xuất)
    # date {
    #   match => [ "[@metadata][timestamp]", "dd/MMM/yyyy:HH:mm:ss Z" ]
    #   target => "@timestamp"
    #   remove_field => [ "[@metadata][timestamp]" ] # Xóa trường tạm đi
    # }

    # Tách thông tin User Agent (tùy chọn)
    # useragent {
    #   source => "[user_agent][original]"
    #   target => "[user_agent]" # Sẽ tạo các trường con như os.name, device.name, etc.
    # }

    # Tách thông tin GeoIP từ client.address (tùy chọn, cần database GeoIP)
    # geoip {
    #   source => "[client][address]"
    #   target => "[client][geo]"
    # }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
    index => "logstash-beats-%{+YYYY.MM.dd}"
  }
}